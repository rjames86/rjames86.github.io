{
    "author": {
        "name": "Ryan M"
    },
    "favicon": "https://ryanmo.co/images/favicon.png",
    "feed_url": "https://ryanmo.co/feeds/tag/ifttt.json",
    "home_page_url": "https://ryanmo.co",
    "items": [
        {
            "id": "https://ryanmo.co/2014/09/28/back-up-your-contacts-with-pythonista",
            "url": "https://ryanmo.co/2014/09/28/back-up-your-contacts-with-pythonista",
            "title": "Back up Your Contacts with Pythonista",
            "content_html": "<p>While it hasn't happened in a while, I have lost or had issues with contacts in iCloud. I haven't found a reliable way to automatically back up my contacts on my Mac, but Pythonista offers a simple way to back them up.</p>\n\n\n<p>Pythonista offers a great library which gives you access to your contacts on iOS. With a short script, I can back up my contacts to a folder in my Dropbox account. This will add a vCard file to my Dropbox account with the date the script was run.</p>\n<p><em>Note: You'll need the Dropbox login script for this to work. Visit <a href=\"https://gist.github.com/omz/4034526\">this</a> link to get it set up. I keep mine in a folder called \"lib\" in Pythonista.</em></p>\n<p>You can download my Contacts Back up script <a href=\"https://gist.github.com/rjames86/79f857f427599f6e145c\">here</a>.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kn\">import</span> <span class=\"nn\">contacts</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span><span class=\"o\">,</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">console</span>\n<span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">path</span> <span class=\"o\">+=</span> <span class=\"p\">[</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">abspath</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">)),</span> <span class=\"s1\">&#39;lib&#39;</span><span class=\"p\">)]</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dropboxlogin</span> <span class=\"kn\">import</span> <span class=\"n\">get_client</span>\n<span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span>\n\n<span class=\"c1\"># Update this path here for the backup</span>\n<span class=\"c1\"># location in your Dropbox account.</span>\n<span class=\"n\">BACKUP_PATH</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;/Backups/Contacts&#39;</span>\n\n<span class=\"n\">TODAY</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">today</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">&#39;%Y-%m-</span><span class=\"si\">%d</span><span class=\"s1\">&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">dropbox_client</span> <span class=\"o\">=</span> <span class=\"n\">get_client</span><span class=\"p\">()</span>\n\n<span class=\"n\">VCARD</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">person</span><span class=\"o\">.</span><span class=\"n\">vcard</span> <span class=\"k\">for</span> <span class=\"n\">person</span> <span class=\"ow\">in</span> <span class=\"n\">contacts</span><span class=\"o\">.</span><span class=\"n\">get_all_people</span><span class=\"p\">())</span>\n\n<span class=\"n\">console</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n<span class=\"n\">dropbox_client</span><span class=\"o\">.</span><span class=\"n\">put_file</span><span class=\"p\">(</span><span class=\"n\">BACKUP_PATH</span> <span class=\"o\">+</span> <span class=\"s1\">&#39;/contacts </span><span class=\"si\">{}</span><span class=\"s1\">.vcf&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">TODAY</span><span class=\"p\">),</span> <span class=\"n\">VCARD</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"s1\">&#39;Backup complete!&#39;</span>\n</code></pre></div>\n\n<p>If you're like me, you're going to forget to do this on a regular basis. I hadn't yet found a reason to use the IFTTT Launch Center Pro triggers, but this turned about to be a great reason to use it. I have a trigger that goes off on the first of every month that will launch the back up script.</p>\n<p>If you want to get reminders to back up your contacts using IFTTT, you can use the recipe below.</p>\n<p><a href=\"https://ifttt.com/view_embed_recipe/206885-backup-contacts-with-lcp\" target = \"_blank\" class=\"embed_recipe embed_recipe-l_24\" id= \"embed_recipe-206885\"><img src= 'https://ifttt.com/recipe_embed_img/206885' alt=\"IFTTT Recipe: Backup Contacts with LCP connects date-time to launch-center\" width=\"370px\" style=\"max-width:100%\"/></a><script async type=\"text/javascript\" src= \"//ifttt.com/assets/embed_recipe.js\"></script></p>",
            "summary": "<p>While it hasn't happened in a while, I have lost or had issues with contacts in iCloud. I haven't found a reliable way to automatically back up my contacts on my Mac, but Pythonista offers a simple way to back them up.</p>\n",
            "date_published": "2014-09-28T00:00:00-07:00",
            "author": {
                "name": "Ryan M",
                "url": "https://ryanmo.co/author/ryan-m.html"
            },
            "tags": [
                "automation",
                "Dropbox",
                "ifttt",
                "launchcenterpro",
                "ios",
                "pythonista"
            ]
        },
        {
            "id": "https://ryanmo.co/2014/07/06/log-foursquare-locations-in-markdown",
            "url": "https://ryanmo.co/2014/07/06/log-foursquare-locations-in-markdown",
            "title": "Log Foursquare Locations in Markdown",
            "content_html": "<p>I've always used Foursquare as a way to remember the places I had visited while traveling. Foursquare isn't really meant to be used in this way, and as a result, they don't make it easy to answer the question, \"what was that restaurant I went to last time I was here?\" I'm now using IFTTT to log all my checkins to a text file in my Dropbox account.</p>\n\n\n<p>I like MultiMarkdown tables. So that my Foursquare checkins looked nice, I first created a file in my Dropbox account with a heading</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">|</span> <span class=\"nv\">Date</span> <span class=\"p\">|</span>  <span class=\"nv\">VenueName</span>  <span class=\"p\">|</span> <span class=\"nv\">VenueUrl</span> <span class=\"p\">|</span> <span class=\"nv\">Shout</span> <span class=\"p\">|</span> <span class=\"nv\">MapURL</span> <span class=\"p\">|</span>  <span class=\"nv\">City</span> <span class=\"p\">|</span> <span class=\"nv\">State</span> <span class=\"p\">|</span> <span class=\"nv\">Country</span> <span class=\"p\">|</span>\n<span class=\"p\">|</span> <span class=\"p\">:-</span><span class=\"s s-Atom\">--:</span> <span class=\"p\">|</span> <span class=\"p\">:-</span><span class=\"s s-Atom\">--:</span> <span class=\"p\">|</span> <span class=\"p\">:-</span><span class=\"s s-Atom\">--:</span> <span class=\"p\">|</span> <span class=\"p\">:-</span><span class=\"s s-Atom\">--:</span> <span class=\"p\">|</span> <span class=\"p\">:-</span><span class=\"s s-Atom\">--:</span> <span class=\"p\">|</span> <span class=\"p\">:-</span><span class=\"s s-Atom\">--:</span> <span class=\"p\">|</span>\n</code></pre></div>\n\n<p>In IFTTT, I then created a recipe which matches my table headers</p>\n<p><center><a href=\"https://ifttt.com/view_embed_recipe/187719-share-foursquare-checkins-in-mamarkdown-table\" target = \"_blank\" class=\"embed_recipe embed_recipe-l_45\" id= \"embed_recipe-187719\"><img src= 'https://ifttt.com/recipe_embed_img/187719' alt=\"IFTTT Recipe: Share Foursquare checkins in mamarkdown table connects foursquare to dropbox\" width=\"370px\" style=\"max-width:100%\"/></a><script async type=\"text/javascript\" src= \"//ifttt.com/assets/embed_recipe.js\"></script></center></p>\n<p><img alt=\"IFTTT Content\" src=\"https://ryanmo.co/2014/07/06/log-foursquare-locations-in-markdown/content.png\" /></p>\n<p>You may have noticed that I added an additional \"Address\" column that isn't getting filled out. IFTTT doesn't explicitly give the address of the venue you visited. However, the link to the Google Maps image contains GPS coordinates that I can use. Dr. Drang's <a href=\"http://www.leancrew.com/all-this/2014/07/extracting-coordinates-from-apple-maps/\" title=\"Extracting coordinates from Apple Maps - All this\">post</a> gave me the idea to parse out the coordinates and then use them how I'd like. This script, which I'm using with Hazel each time the file is updated, reverse geolocates the coordinates and returns the full address using OpenStreetMap. After that, it appends that address to each line in the markdown file.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"ch\">#!/bin/bash</span>\n\n<span class=\"nv\">FILE</span><span class=\"o\">=</span><span class=\"s2\">&quot;</span><span class=\"nv\">$HOME</span><span class=\"s2\">/Dropbox/IFTTT/foursquare/foursquare.txt&quot;</span>\n\n<span class=\"nv\">START</span><span class=\"o\">=</span><span class=\"m\">1</span>\n<span class=\"nv\">index</span><span class=\"o\">=</span><span class=\"nv\">$START</span>\n<span class=\"nv\">IFS</span><span class=\"o\">=</span><span class=\"s1\">$&#39;\\n&#39;</span>     <span class=\"c1\"># new field separator, the end of line</span>\n<span class=\"k\">for</span> line <span class=\"k\">in</span> <span class=\"k\">$(</span>cat <span class=\"nv\">$FILE</span><span class=\"k\">)</span>\n<span class=\"k\">do</span>\n    <span class=\"nv\">mapsurl</span><span class=\"o\">=</span><span class=\"k\">$(</span><span class=\"nb\">echo</span> <span class=\"nv\">$line</span> <span class=\"p\">|</span> sed -n <span class=\"s1\">&#39;s/.*(\\(http.*\\)).*/\\1/p&#39;</span><span class=\"k\">)</span><span class=\"p\">;</span>\n\n    <span class=\"nv\">existingaddress</span><span class=\"o\">=</span><span class=\"k\">$(</span><span class=\"nb\">echo</span> <span class=\"nv\">$line</span> <span class=\"p\">|</span> grep -E <span class=\"s1\">&#39;^.*\\(http.*\\)(.*\\|){2,}$&#39;</span><span class=\"k\">)</span><span class=\"p\">;</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">[[</span> ! <span class=\"nv\">$mapsurl</span> <span class=\"o\">||</span> <span class=\"nv\">$existingaddress</span> <span class=\"o\">]]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n        <span class=\"o\">((</span> <span class=\"nv\">index</span> <span class=\"o\">=</span> index + <span class=\"m\">1</span> <span class=\"o\">))</span>\n        <span class=\"k\">continue</span>\n    <span class=\"k\">fi</span>\n\n    <span class=\"nv\">coords</span><span class=\"o\">=</span><span class=\"k\">$(</span><span class=\"nb\">echo</span> <span class=\"nv\">$mapsurl</span> <span class=\"p\">|</span> sed -E <span class=\"s1\">&#39;s/^.+\\?center=([0-9.,-]+).+/\\1/&#39;</span><span class=\"k\">)</span><span class=\"p\">;</span>\n    <span class=\"nv\">lat</span><span class=\"o\">=</span><span class=\"k\">$(</span><span class=\"nb\">echo</span> <span class=\"nv\">$coords</span> <span class=\"p\">|</span> cut -f1 -d,<span class=\"k\">)</span>\n    <span class=\"nv\">long</span><span class=\"o\">=</span><span class=\"k\">$(</span><span class=\"nb\">echo</span> <span class=\"nv\">$coords</span> <span class=\"p\">|</span> cut -f2 -d,<span class=\"k\">)</span>\n\n    <span class=\"nv\">address</span><span class=\"o\">=</span><span class=\"k\">$(</span>curl -s <span class=\"s2\">&quot;http://nominatim.openstreetmap.org/reverse?format=json&amp;lat=</span><span class=\"si\">${</span><span class=\"nv\">lat</span><span class=\"si\">}</span><span class=\"s2\">&amp;lon=</span><span class=\"si\">${</span><span class=\"nv\">long</span><span class=\"si\">}</span><span class=\"s2\">&amp;zoom=18&amp;addressdetails=1&quot;</span><span class=\"k\">)</span>\n\n    <span class=\"nv\">country</span><span class=\"o\">=</span><span class=\"k\">$(</span><span class=\"nb\">echo</span> <span class=\"nv\">$address</span> <span class=\"p\">|</span> sed -e <span class=\"s1\">&#39;s/.*\\(&quot;country&quot;:&quot;.*&quot;\\),.*/\\1/&#39;</span> <span class=\"p\">|</span> awk -F<span class=\"s1\">&#39;&quot;&#39;</span> <span class=\"s1\">&#39;/country/ {print $4}&#39;</span><span class=\"k\">)</span>\n    <span class=\"nv\">city</span><span class=\"o\">=</span><span class=\"k\">$(</span><span class=\"nb\">echo</span> <span class=\"nv\">$address</span> <span class=\"p\">|</span> sed -e <span class=\"s1\">&#39;s/.*\\(&quot;city&quot;:&quot;.*&quot;\\),.*/\\1/&#39;</span> <span class=\"p\">|</span> awk -F<span class=\"s1\">&#39;&quot;&#39;</span> <span class=\"s1\">&#39;/city/ {print $4}&#39;</span><span class=\"k\">)</span>\n    <span class=\"nv\">state</span><span class=\"o\">=</span><span class=\"k\">$(</span><span class=\"nb\">echo</span> <span class=\"nv\">$address</span> <span class=\"p\">|</span> grep <span class=\"s2\">&quot;\\bstate\\b&quot;</span> <span class=\"p\">|</span> sed -e <span class=\"s1\">&#39;s/.*\\(&quot;state&quot;:&quot;.*&quot;\\),.*/\\1/&#39;</span> <span class=\"p\">|</span> awk -F<span class=\"s1\">&#39;&quot;&#39;</span> <span class=\"s1\">&#39;/state/ {print $4}&#39;</span><span class=\"k\">)</span>\n\n    <span class=\"c1\"># update the line of text</span>\n    sed -i <span class=\"s1\">&#39;&#39;</span> -e <span class=\"s2\">&quot;</span><span class=\"si\">${</span><span class=\"nv\">index</span><span class=\"si\">}</span><span class=\"s2\">s/\\(.*\\)/\\1 </span><span class=\"nv\">$city</span><span class=\"s2\"> | </span><span class=\"nv\">$state</span><span class=\"s2\"> | </span><span class=\"nv\">$country</span><span class=\"s2\"> |/&quot;</span> <span class=\"s2\">&quot;</span><span class=\"nv\">$FILE</span><span class=\"s2\">&quot;</span><span class=\"p\">;</span>\n    <span class=\"o\">((</span> <span class=\"nv\">index</span> <span class=\"o\">=</span> index + <span class=\"m\">1</span> <span class=\"o\">))</span>\n<span class=\"k\">done</span>\n</code></pre></div>\n\n<p>In the end, the table then ends up looking something like this:</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Date</th>\n<th align=\"center\">VenueName</th>\n<th align=\"center\">VenueUrl</th>\n<th align=\"center\">Shout</th>\n<th align=\"center\">MapURL</th>\n<th align=\"center\">City</th>\n<th align=\"center\">State</th>\n<th align=\"center\">Country</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">July 06, 2014 at 07:07PM</td>\n<td align=\"center\">Third Floor Espresso (3FE)</td>\n<td align=\"center\">http://4sq.com/rtEJWP</td>\n<td align=\"center\"></td>\n<td align=\"center\"><a href=\"http://maps.google.com/maps/api/staticmap?center=53.33998,-6.242084&amp;zoom=16&amp;size=710x440&amp;maptype=roadmap&amp;sensor=false&amp;markers=color:red%7C53.33998,-6.242084\">Map Link</a></td>\n<td align=\"center\">Dublin</td>\n<td align=\"center\"></td>\n<td align=\"center\">Republic of Ireland</td>\n</tr>\n<tr>\n<td align=\"center\">July 06, 2013 at 10:00AM</td>\n<td align=\"center\">Wooly Pig Cafe</td>\n<td align=\"center\">http://4sq.com/1n5Scct</td>\n<td align=\"center\"></td>\n<td align=\"center\"><a href=\"http://maps.google.com/maps/api/staticmap?center=37.76522,-122.460266&amp;zoom=16&amp;size=710x440&amp;maptype=roadmap&amp;sensor=false&amp;markers=color:red%7C53.33842395309077,-6.234097712535167\">Map Link</a></td>\n<td align=\"center\">San Francisco</td>\n<td align=\"center\">California</td>\n<td align=\"center\">United States of America</td>\n</tr>\n</tbody>\n</table>",
            "summary": "<p>I've always used Foursquare as a way to remember the places I had visited while traveling. Foursquare isn't really meant to be used in this way, and as a result, they don't make it easy to answer the question, \"what was that restaurant I went to last time I was here?\" I'm now using IFTTT to log all my checkins to a text file in my Dropbox account.</p>\n",
            "date_published": "2014-07-06T00:00:00-07:00",
            "author": {
                "name": "Ryan M",
                "url": "https://ryanmo.co/author/ryan-m.html"
            },
            "tags": [
                "markdown",
                "automation",
                "bash",
                "ifttt"
            ]
        },
        {
            "id": "https://ryanmo.co/2013/09/05/instascriptogram",
            "url": "https://ryanmo.co/2013/09/05/instascriptogram",
            "title": "Instascriptogram. Post Instagram pics to Scriptogr.am",
            "content_html": "<p><strong>[Update 2014-11-19]</strong>\nI've since moved off of scriptogr.am. The service wasn't working for a long time and doesn't seem to be in active developement. I ended up moving that blog over to a static blog with Pelican similar to this one.</p>\n<hr />\n\n<p>Since moving to Dublin, my girlfriend and I have wanted to keep our friends and family up-to-date on everything we've been doing. I recently bought the new Olympus E-P5 and have been taking a lot of pictures. So that everyone knows what we're doing, we decided to share a <a href=\"http://www.scriptogr.am\">Scriptogr.am</a> blog and post pictures of our adventures. </p>\n\n\n<p>Sometimes it's quick and easy to snap a picture on Instagram and share with all your friends, but my parents and family aren't on Instagram, but they know to follow my blog for updates. Instead of having to manually pull the pics down, write up a post and publish it, I used a combination of IFTTT, Dropbox and my server at Macminicolo.net to do all the work for me.</p>\n<p>The magic starts at IFTTT. I have a <a href=\"https://ifttt.com/recipes/115652\">recipe</a> that watched for a particular tag when I post to Instagram. If that tag exists, a text file is saved to my Dropbox account. I have a cron running once an hour<sup id=\"fnref:1\"><a class=\"footnote-ref\" href=\"#fn:1\">1</a></sup> to run the script and check for any new files.</p>\n<p>One of the only complaints about Scriptogr.am has been that I have to manually hit a publish button before posts will go live. But with their API, the posts are immediate<sup id=\"fnref:2\"><a class=\"footnote-ref\" href=\"#fn:2\">2</a></sup>. Now, all of my Instagram adventures (and my girlfriend's) can be posted to our blog for friends and family to follow. Once the post is made, I get a Pushover notification letting me know that a post was made by either me or my girlfriend.</p>\n<p><img alt=\"pushover_instascriptogram\" src=\"https://ryanmo.co/2013/09/05/instascriptogram/pushover_instascriptogram.jpg\" /></p>\n<p>If you're interested in the script, it can be found on Github <a href=\"https://github.com/rjames86/instascriptogram\">here</a>. An example of the posts being made can be found at our travel blog <a href=\"http://keephouseadventures.com/posts/2013/Sep/03_12_44/instagram-pic-for-tuesday-sep-03/\">keephouseadventures.com</a></p>\n<div class=\"footnote\">\n<hr />\n<ol>\n<li id=\"fn:1\">\n<p>I tried using Hazel for this, but I kept getting errors since I wasn't actually processing the file. Any suggestions on this, please let me know!&#160;<a class=\"footnote-backref\" href=\"#fnref:1\" title=\"Jump back to footnote 1 in the text\">&#8617;</a></p>\n</li>\n<li id=\"fn:2\">\n<p>Like what you get from apps like Byword&#160;<a class=\"footnote-backref\" href=\"#fnref:2\" title=\"Jump back to footnote 2 in the text\">&#8617;</a></p>\n</li>\n</ol>\n</div>",
            "summary": "\n<p>Since moving to Dublin, my girlfriend and I have wanted to keep our friends and family up-to-date on everything we've been doing. I recently bought the new Olympus E-P5 and have been taking a lot of pictures. So that everyone knows what we're doing, we decided to share a <a href=\"http://www.scriptogr.am\">Scriptogr.am</a> blog and post pictures of our adventures. </p>\n",
            "date_published": "2013-09-05T00:00:00-07:00",
            "date_modified": "2014-11-19T00:00:00-08:00",
            "author": {
                "name": "Ryan M",
                "url": "https://ryanmo.co/author/ryan-m.html"
            },
            "tags": [
                "dropbox",
                "automation",
                "ifttt",
                "photos"
            ]
        }
    ],
    "title": "ryanmo.co",
    "version": "https://jsonfeed.org/version/1"
}