<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>ryanmo.co - alfred</title><link>https://ryanmo.co/</link><description></description><lastBuildDate>Tue, 16 May 2017 07:30:00 -0700</lastBuildDate><item><title>Create Dropbox Links from Alfred</title><link>https://ryanmo.co/2017/05/16/create-dropbox-links-from-alfred</link><description>&lt;p&gt;I've always treated Alfred as a Finder replacement. The speed at which I can find and take action on files is faster than Finder.app or Spotlight will ever be able to do. Because of this, I want to have a quick and easy way to share Dropbox files from within Alfred.&lt;/p&gt;


&lt;p&gt;Over the years, I've built version of a workflow that lets me share files with Dropbox. They've always been very specific to me and never reliable or secure enough to share with others. The Dropbox API has come a long ways and now gives me the ability to share this workflow without exposing my app secret.&lt;/p&gt;
&lt;p&gt;&lt;img alt="File Search" src="https://ryanmo.co/posts/Tech/2017-05-16/file_search.png" /&gt;&lt;/p&gt;
&lt;p&gt;This is my primary way of searching for files. I have Alfred configured so that I can hit the right arrow to take me to the actions menu.&lt;/p&gt;
&lt;p&gt;&lt;img alt="File Action" src="https://ryanmo.co/posts/Tech/2017-05-16/file_action.png" /&gt;&lt;/p&gt;
&lt;p&gt;You'll see that I have two actions set up. One for simply creating a link and another for creating a link that expires in a week. The latter is only possible if you have a Dropbox Pro account.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Notification" src="https://ryanmo.co/posts/Tech/2017-05-16/notification.png" /&gt;&lt;/p&gt;
&lt;p&gt;Once you've selected one of the options, a notification will appear telling you that the link was created and the link will then be in your clipboard.&lt;/p&gt;
&lt;p&gt;You can download the workflow by clicking the Alfred icon below. Instructions for setting up the workflow can be found by clicking on the [x] in the top-right of the workflow once it's installed. Alfred doesn't do a great job making it easy to find the set-up instructions.&lt;/p&gt;
&lt;h3 id="features"&gt;Features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Supports multiple accounts if you have a personal and business account&lt;/li&gt;
&lt;li&gt;You can create any number of expiring links by creating another action and modifying the Alfred Workflow JSON &lt;code&gt;expires&lt;/code&gt; key to a number of days&lt;/li&gt;
&lt;li&gt;Do to all of the different permissions that Dropbox offers for their business product, if a link already exists for the file you're trying to share with more restrictive permissions, a link won't be created. It's too difficult to expose what permissions that exist in a notification bubble. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://ryanmo.co/downloads/2017-05-16/DropboxSharedLinks.alfredworkflow"&gt;&lt;img alt="image" src="https://ryanmo.co/images/alfred_extension.jpg" /&gt;&lt;/a&gt;  &lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ryan M</dc:creator><pubDate>Tue, 16 May 2017 07:30:00 -0700</pubDate><guid isPermaLink="false">tag:ryanmo.co,2017-05-16:/2017/05/16/create-dropbox-links-from-alfred</guid><category>Tech</category><category>alfred</category><category>dropbox</category><category>automation</category><category>python</category></item><item><title>Clearing Multiple Notifications in Mac OS X</title><link>https://ryanmo.co/2016/04/18/clearing-multiple-notifications-in-mac-os-x</link><description>&lt;p&gt;If I haven't used my computer for a while, I'll end up with multiple calendar notifications that I have to painfully close one by one. I went searching for something that would let me close them faster, but nothing I could find did quite what I wanted.&lt;/p&gt;
&lt;p&gt;Nearly every day I come home from work to a slew of notifications from my day.&lt;/p&gt;
&lt;p&gt;&lt;img alt="notifications" src="https://ryanmo.co/posts/Tech/2016-04-18/notifications.png" /&gt;&lt;/p&gt;
&lt;p&gt;One way to close all these is to open up the Notification Center panel and click all of the X's, which will also clear out your notifications. That's still janky and I'd rather have this done without having to click a bunch of times.&lt;/p&gt;
&lt;p&gt;I first wrote the script using Applescript. I ran into some annoying issues when trying to ignore certain notification windows, such as System Updates. I wanted to ignore that window entirely, and since Applescript doesn't have a &lt;code&gt;continue&lt;/code&gt; in for-loops I opted to use Javascript which ended up being easier.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Application&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;System Events&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;notificationCenter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;processes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;byName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;NotificationCenter&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;closeWindow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;buttons&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;whose&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="nx"&gt;_or&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Close&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;OK&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;})().&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="p"&gt;()})&lt;/span&gt;
    &lt;span class="nx"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// The UI can&amp;#39;t always keep up, so we introduce a short delay&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;notificationCenter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;windows&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;closeWindow&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I'm currently running this in Keyboard Maestro, but it could just as easily be run with Alfred. I've made very basic versions using both for download:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ryanmo.co/downloads/ClearNotificationsAlfred.zip"&gt;Alfred&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ryanmo.co/downloads/ClearNotificationCenterKM.zip"&gt;Keyboard Maestro&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ryan M</dc:creator><pubDate>Mon, 18 Apr 2016 20:04:59 -0700</pubDate><guid isPermaLink="false">tag:ryanmo.co,2016-04-18:/2016/04/18/clearing-multiple-notifications-in-mac-os-x</guid><category>Tech</category><category>keyboardmaestro</category><category>alfred</category><category>automation</category><category>javascript</category></item><item><title>Show Last File Added to Dropbox with Alfred</title><link>https://ryanmo.co/2014/11/16/show-last-file-added-to-dropbox-with-alfred</link><description>&lt;p&gt;&lt;em&gt;Update 2014-12-28&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I realize now that simply revealing the file isn't as useful as performing actions on the file. There are also occasions when I want to see the last 5 files added, not just the most recent. I've converted the workfow to now be a script filter.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Show Recently Added in Dropbox" src="https://ryanmo.co/2014/11/16/show-last-file-added-to-dropbox-with-alfred/recentlyadded.png" /&gt;&lt;/p&gt;
&lt;p&gt;I've updated the download link below to be the latest Alfred workflow. The old version is still available with an empty keyword. &lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;To continue on &lt;a href="{static}../2014-11-15/2014-11-15_A_better_downloads_folder.md"&gt;yesterday's post&lt;/a&gt;, revealing files in the Finder can be very useful. One thing that I find myself doing daily is moving into a particular folder in my Dropbox account once I've used the Alfred "move" action or when a new file has been added to my account.&lt;/p&gt;
&lt;p&gt;How many times have you see this notification and wondered what file it was and where on earth it is in your Dropbox account?&lt;/p&gt;
&lt;p&gt;&lt;img alt="dropbox_notification" src="https://ryanmo.co/2014/11/16/show-last-file-added-to-dropbox-with-alfred/dropbox_notification.png" /&gt;&lt;/p&gt;
&lt;p&gt;Similar to revealing the last file added to my Dropbox folder, I can show the file last added in my Dropbox account. The only difference here is that my two Dropbox folders combined (work and personal) amount to about 150,000 files. Listing off all those files and sorting them by Date Added would take far too long. Instead, I can take advantage of &lt;code&gt;mdfind&lt;/code&gt;, which is the command line version of Spotlight.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;DROPBOX_WORK&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;python -c &lt;span class="s2"&gt;&amp;quot;import json;f=open(&amp;#39;&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/.dropbox/info.json&amp;#39;, &amp;#39;r&amp;#39;).read();data=json.loads(f);print data.get(&amp;#39;business&amp;#39;, {}).get(&amp;#39;path&amp;#39;, &amp;#39;&amp;#39;)&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;DROPBOX_PERSONAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;python -c &lt;span class="s2"&gt;&amp;quot;import json;f=open(&amp;#39;&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/.dropbox/info.json&amp;#39;, &amp;#39;r&amp;#39;).read();data=json.loads(f);print data.get(&amp;#39;personal&amp;#39;, {}).get(&amp;#39;path&amp;#39;, &amp;#39;&amp;#39;)&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;DROPBOX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/Dropbox&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;LAST_ADDED&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;mdfind &lt;span class="se"&gt;\&lt;/span&gt;
    -onlyin &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$DROPBOX_PERSONAL&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -onlyin &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$DROPBOX_WORK&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -onlyin &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$DROPBOX&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;kMDItemDateAdded &amp;gt;= $time.today(-1)&amp;#39;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    -attr &lt;span class="s1"&gt;&amp;#39;kMDItemDateAdded&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
awk -F&lt;span class="s2"&gt;&amp;quot;kMDItemDateAdded =&amp;quot;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;{print $2 &amp;quot;|&amp;quot; $1}&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
sort -r &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
cut -d&lt;span class="s1"&gt;&amp;#39;|&amp;#39;&lt;/span&gt; -f2 &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
head -n1 &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
sed -e &lt;span class="s1"&gt;&amp;#39;s/^ *//&amp;#39;&lt;/span&gt; -e &lt;span class="s1"&gt;&amp;#39;s/ *$//&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -z &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$LAST_ADDED&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;then&lt;/span&gt;
  &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$LAST_ADDED&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
  open -R &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$LAST_ADDED&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I include the paths to both the work and personal Dropbox folders if you have them (it doesn't matter if you don't) as well as the regularly named "Dropbox" folder. From there, it's a matter of getting the name and date last added for files that have been added within the last day. The result shows up almost instantly with having over 150,000 files in my Dropbox folders. &lt;/p&gt;
&lt;p&gt;You can download the workflow below. &lt;/p&gt;
&lt;p&gt;&lt;a href="https://ryanmo.co/2014/11/16/show-last-file-added-to-dropbox-with-alfred/Reveal last added in Dropbox.alfredworkflow"&gt;&lt;img alt="image" src="https://ryanmo.co/images/alfred_extension.jpg" /&gt;&lt;/a&gt;  &lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ryan M</dc:creator><pubDate>Sun, 16 Nov 2014 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:ryanmo.co,2014-11-16:/2014/11/16/show-last-file-added-to-dropbox-with-alfred</guid><category>Tech</category><category>alfred</category><category>scripting</category></item><item><title>A Better “Show Downloads Folder" with Alfred</title><link>https://ryanmo.co/2014/11/15/a-better-show-downloads-folder-with-alfred</link><description>&lt;p&gt;I've always used Alfred as a way to reveal my Downloads folder with the keyboard shortcut ⌘ ⌥ L, but that only gets me part of the way. I'm usually opening the downloads folder for a reason and so it would be handy if the file last added was already highlighted for me.&lt;/p&gt;
&lt;p&gt;My original workflow simply looked like this&lt;/p&gt;
&lt;p&gt;&lt;img alt="Show Downloads Folder in Alfred" src="https://ryanmo.co/2014/11/15/a-better-show-downloads-folder-with-alfred/show_downloads.png" title="Show Downloads Folder in Alfred" /&gt;&lt;/p&gt;
&lt;p&gt;Unfortunately, listing files or using the &lt;code&gt;find&lt;/code&gt; command doesn't give you the file last added. You can get away with using ctime, but not in every case. Turns out Date Added is an attribute that Mac OS X adds to every file, which meant that I could use &lt;code&gt;mdfind&lt;/code&gt; to get the file that was last added. All that's left to do is print out a list of file name and date last added, sort them, and get the most recently added file from the Downloads folder. From there, its just a matter of using the &lt;code&gt;open -R&lt;/code&gt; command to reveal the file&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;DOWNLOADS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/Downloads&amp;quot;&lt;/span&gt;

&lt;span class="nv"&gt;RECENT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;mdls -name kMDItemFSName -name kMDItemDateAdded &lt;span class="nv"&gt;$DOWNLOADS&lt;/span&gt;/* &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
sed &lt;span class="s1"&gt;&amp;#39;N;s/\n//&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
awk &lt;span class="s1"&gt;&amp;#39;{print $3 &amp;quot; &amp;quot; $4 &amp;quot; &amp;quot; substr($0,index($0,$7))}&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
sort -r &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
cut -d&lt;span class="s1"&gt;&amp;#39;&amp;quot;&amp;#39;&lt;/span&gt; -f2 &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
head -n1&lt;span class="k"&gt;)&lt;/span&gt;

open -R &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$DOWNLOADS&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;$RECENT&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;mdls -name kMDItemFSName -name kMDItemDateAdded ~/Downloads/*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Lists the name and date added for all the files in the Downloads folder&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sed 'N;s/\n//'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Looks at the next line and removes any newlines, which puts the name and date added all on one line&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;awk '{print $3 " " $4 " " substr($0,index($0,$7))}'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Returns the name and date added in a nice format like "2014-11-15 19:36:28 "Arq.zip""&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sort -r&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Sorts the lines&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cut -d'"' -f2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Splits the lines on a quotation mark and returns the second result (the filename)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;head -n1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Gives the top item in the list, which is the most recently added file&lt;/p&gt;
&lt;p&gt;&lt;code&gt;open -R&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Reveals the file instead of opening it in OS X.&lt;/p&gt;
&lt;p&gt;You can download this workflow to reveal the last added file in your Downloads folder below.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ryanmo.co/downloads/OpenDownloadsFolder.alfredworkflow"&gt;&lt;img alt="image" src="https://ryanmo.co/images/alfred_extension.jpg" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;You can read a nice explanation of how the N command works in sed &lt;a href="http://stackoverflow.com/questions/6255796/how-the-n-command-works-in-sed"&gt;here&lt;/a&gt;&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ryan M</dc:creator><pubDate>Sat, 15 Nov 2014 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:ryanmo.co,2014-11-15:/2014/11/15/a-better-show-downloads-folder-with-alfred</guid><category>Tech</category><category>alfred</category><category>scripting</category></item><item><title>Digitizing the Family Photos</title><link>https://ryanmo.co/2014/03/01/digitizing-the-family-photos</link><description>&lt;p&gt;I had this ongoing fear that all of our family photos would get lost or destroyed. I've always wanted to have a central place for all of my photos, both past and present. In early 2012, my mom and I started on a project to scan, crop and organize all of our old photos from negatives.&lt;/p&gt;


&lt;h1 id="going-digital"&gt;Going Digital&lt;/h1&gt;
&lt;p&gt;I was fortunate that when I decided to take on this project, my mom already had two large Epson flatbed scanners with transparency adapters. What was even better was that my mom was highly organized over the years and archived all of the negatives of every photo she had ever taken. This only left us with one thing to do: scan the photos.  Since I was living in California and my mom in Montana, the work of pulling the negatives and scanning them was going to be done by my mom. We also needed to have a way to transfer the files from her computer to mine. Dropbox was an obvious choice in this case, but there was one problem that would complicate everything: hard drive space. &lt;/p&gt;
&lt;p&gt;My mom was still using her PowerMac G5 at the time and hard drive space was pretty limited. It wouldn't have taken long before she wouldn't have enough space to even scan the photos. As a simple solution, once the scans were uploaded and synced to my computer, I could have manually removed the files and place them on my own computer, but I was lazy and didn't want to check constantly whether new files had been added. At the time, I was just learning how to code and thought this would be good practice &lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;. I ended up writing a script that would mirror the folder structure for the scans in our Dropbox shared folder on my local Desktop and then remove the original file in Dropbox. The old folder structure was maintained so that if any new files were added to the same folder, my mom wouldn't have to recreate them. I then set this up as a cron job to run once a day and then send me an email digest of all the files that were transferred.&lt;/p&gt;
&lt;p&gt;After a couple of weeks, I had nearly 15 years of photos in folders organized by year totaling around 85GB. Each Photoshop file was around 1.GB each and the photos were scanned at 300dpi. Now the hardest and longest part of the project was about to begin.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Folder Structure" src="https://ryanmo.co/2014/03/01/digitizing-the-family-photos/folders.png" /&gt;&lt;/p&gt;
&lt;h1 id="cropping-resizing-and-renaming"&gt;Cropping, Resizing, and Renaming&lt;/h1&gt;
&lt;p&gt;I wasn't entirely sure how I was going to do this part efficiently. My mom hadn't laid out the photos in a symmetric grid and there wasn't a reliable way to detect photo borders. I also decided beforehand that I wanted to preserve the original files and so I would save an individual Photoshop file for each photo that was cropped. I then wanted to have a separate folder that was simply for viewing the files.&lt;/p&gt;
&lt;p&gt;Starting off, I wanted to try manually doing everything and automate things over time. Cropping the files using the marquee tool was always going to be manual. I would select the file, copy it, create a new file with the dimensions from the clipboard and then paste the photo into the new file. After I had gone through the entire file, I would save all the files at once with random names (you'll see later why the naming here didn't matter). This part immediately became tedious. I did some research on how I could make this easier or faster and discovered Photoshop actions&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="#fn:2"&gt;2&lt;/a&gt;&lt;/sup&gt;. What was great about this was I was able to record every step I was taking into one single keyboard shortcut. This broke down the process to simply selecting the photo and hitting shift-F1. This one keyboard shortcut took care of copying the file, creating a new file with the dimensions of the clipboard, pasting and then finally selecting the previous file. That last step was key. Instead of a final control-tab to move back to the original file, the action took care of it for me. You can download the Photoshop action &lt;a href="https://ryanmo.co/2014/03/01/digitizing-the-family-photos/Scans.atn"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Actions Screenshot" src="https://ryanmo.co/2014/03/01/digitizing-the-family-photos/actions_screenshot.png" /&gt;&lt;/p&gt;
&lt;p&gt;At this point, I had an original Photoshop file and a folder called Cropped where all the new photos lived. I now needed a way to rename these files to something meaningful. Automator and Alfred made this simple. After I finished cropping, I would select all of the newly created files, run my Alfred extension "Rename Scans" which would trigger an automator script, prompt me to name the files, and then each file would be renamed from something like Untitled1.psd to November 1987_1.psd.&lt;/p&gt;
&lt;p&gt;At this point, the final step for each of these files was to create a viewable JPG for every photo. Turns out, Photoshop has a great feature called Image Processor. After the files were neatly renamed, I would open up the Image Processor, select the folder, and hit go. My settings were always saved so there wasn't much else to be done each time I ran this. I would take the Photoshop files, create a new JPG at 5 quality in a new folder called Low Res Images with the same naming convention. &lt;/p&gt;
&lt;p&gt;&lt;img alt="Image Processor" src="https://ryanmo.co/2014/03/01/digitizing-the-family-photos/image_processor.png" /&gt;&lt;/p&gt;
&lt;p&gt;I was then able to share this folder back with my mom and the rest of my family. They enjoyed watching the photos get added over the last year or so as I casually worked on the files.&lt;/p&gt;
&lt;p&gt;Once I had done all of the steps for each file, I would move the folder of PSD files into a folder called Done. This simply gave me a better idea of how many folders I had left to work on.&lt;/p&gt;
&lt;h1 id="viewing"&gt;Viewing&lt;/h1&gt;
&lt;p&gt;In late January 2014, I finally finished cropping all of the photos. I never intended on it taking quite this long, but it was never something that needed to have a deadline. It felt great to know that I was finally done and could just sit back and look at all of the old photos from what I was little. I was using &lt;a href="http://www.lynapp.com"&gt;Lyn&lt;/a&gt; to view all the photos and realized that something was a little off. All of the photos were out of order. All of the folders had been named as Month Year, and even if I was viewing all of the photos at the same time, they were sorted in the order that I had created the files, not the time they were actually taken. I couldn't sort them in a photo viewer, Dropbox's photo tab would sort them by file creation and not EXIF date taken, and using Spotlight search was more-or-less pointless. There was no way  that I was going to manually date 3,300 photos by hand. I had used the command line tool &lt;a href="http://www.sno.phy.queensu.ca/~phil/exiftool/"&gt;exiftools&lt;/a&gt; a few times, and I started looking into whether this would be a possibility for dating the files. It turned out that the command was really straightforward for naming a folder&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;exiftool&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-AllDates=1999:12:31 12:00:00&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;foldername&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Even though I could have done it by hand, I didn't really want to have to type this in for 80 or so folders of photos. I quickly wrote up a Python script that would parse out the date from the folder names and prompt me to confirm whether this was correct or not. I was fine hitting Enter 80 times. &lt;/p&gt;
&lt;p&gt;Some of the folders were called things like January-March 1995. For these cases, I would just assume the first month for the date. I wasn't going for perfection, but rather a good estimate for the time the photos were taken.&lt;/p&gt;
&lt;p&gt;You can take a look at the script &lt;a href="https://ryanmo.co/2014/03/01/digitizing-the-family-photos/convert_exif_dates.py"&gt;here&lt;/a&gt;. Do note that the script is really specific to my folder structure so it might not work perfectly for you, but it'll be a good start if you need to do something like this.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Lyn App" src="https://ryanmo.co/2014/03/01/digitizing-the-family-photos/lynapp.png" /&gt;&lt;/p&gt;
&lt;h1 id="what-i-learned"&gt;What I Learned&lt;/h1&gt;
&lt;p&gt;Epson now makes a &lt;a href="http://www.epson.com/cgi-bin/Store/jsp/Product.do?BV_UseBVCookie=yes&amp;amp;sku=B11B178061"&gt;scanner&lt;/a&gt; that eliminates a lot of the hard work around cropping the photos. It's expensive, but it would have saved me a lot of work.&lt;/p&gt;
&lt;p&gt;I've made this comment before, but I still would love to have a way to embed facial recognition into the metadata of photos. My perfect world would be having the ability to do something like search for all of the photos of my brother before 1995.&lt;/p&gt;
&lt;p&gt;Ultimately, this was a long, but satisfying project. I sleep better at night knowing that all of our family photos are backed up and not be lost forever if there were ever to be a disaster.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;For those who want to see the script, &lt;a href="https://ryanmo.co/2014/03/01/digitizing-the-family-photos/movescans.py"&gt;here&lt;/a&gt; it is. Please don't judge me. This was actually one of my first real scripts I had ever written. I know there are better ways to do a lot of it.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;I'm a total Photoshop newb&amp;#160;&lt;a class="footnote-backref" href="#fnref:2" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ryan M</dc:creator><pubDate>Sat, 01 Mar 2014 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:ryanmo.co,2014-03-01:/2014/03/01/digitizing-the-family-photos</guid><category>Tech</category><category>python</category><category>alfred</category><category>hazel</category><category>dropbox</category><category>bash</category><category>photos</category></item><item><title>Airport Codes with Alfred</title><link>https://ryanmo.co/2014/01/18/airport-codes-with-alfred</link><description>&lt;p&gt;Here's a quick Alfred workflow to get the airport code for a given city or the city based on an airport code.&lt;/p&gt;


&lt;p&gt;&lt;img alt="Alfred Search" src="https://ryanmo.co/2014/01/18/airport-codes-with-alfred/dub.png" /&gt;&lt;/p&gt;
&lt;p&gt;You can search either by the 3-character airport code or by the city name. You can make your search specific enough to return one result, such as "dublin, ireland"&lt;/p&gt;
&lt;p&gt;&lt;img alt="Growl" src="https://ryanmo.co/2014/01/18/airport-codes-with-alfred/growl_dublin.png" /&gt;&lt;/p&gt;
&lt;p&gt;or simple so that you can see multiple results, like "ireland"&lt;/p&gt;
&lt;p&gt;&lt;img alt="Growl" src="https://ryanmo.co/2014/01/18/airport-codes-with-alfred/growl_ireland.png" /&gt;&lt;/p&gt;
&lt;p&gt;You can download the Airport Codes workflow here:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ryanmo.co/2014/01/18/airport-codes-with-alfred/Airport_Codes.alfredworkflow"&gt;&lt;img alt="image" src="https://ryanmo.co/images/alfred_extension.jpg" /&gt;&lt;/a&gt;  &lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ryan M</dc:creator><pubDate>Sat, 18 Jan 2014 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:ryanmo.co,2014-01-18:/2014/01/18/airport-codes-with-alfred</guid><category>Tech</category><category>alfred</category><category>automation</category></item><item><title>Create a Scratchpad with Alfred</title><link>https://ryanmo.co/2013/12/28/create-a-scratchpad-with-alfred</link><description>&lt;p&gt;I always have an empty doc open on my computer as a place to quickly paste in some text. It's never something I need to save and I'll never miss it if I happen to lose it. The only problem is that it's slow recreating this scratchpad file or find it each time I need it. &lt;/p&gt;
&lt;p&gt;I created a very simple workflow that takes the contents of my clipboard and opens a file in a text editor of my choice. The Alfred workflow can be triggered in one of two ways. The first is with the keyboard shortcut "hyper"-s&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;. The second way is simply typing "scratchpad" into Alfred. &lt;/p&gt;
&lt;p&gt;&lt;img alt="scratchpad_alfred" src="https://ryanmo.co/2013/12/28/create-a-scratchpad-with-alfred/scratchpad_alfred.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;I have it set to save a file in my Home folder called ".scratchpad" and then open the file in Sublime Text. Right now, the workflow will check for Sublime Text version 3, then version 2 and if neither exist, it will open the scratchpad in Text Edit. &lt;/p&gt;
&lt;p&gt;&lt;img alt="scratchpad_example" src="https://ryanmo.co/2013/12/28/create-a-scratchpad-with-alfred/scratchpad_example.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;You'll need the Alfred Powerpack to use this workflow. If you already have it, you can download it with the link below. &lt;/p&gt;
&lt;p&gt;&lt;a href="https://ryanmo.co/2013/12/28/create-a-scratchpad-with-alfred/Scratchpad.alfredworkflow"&gt;&lt;img alt="image" src="https://ryanmo.co/images/alfred_extension.jpg" /&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;command-option-control-shift mapped to my caps lock key. You can read more &lt;a href="http://brettterpstra.com/2012/12/08/a-useful-caps-lock-key/"&gt;here&lt;/a&gt; on how to make a hyper key&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ryan M</dc:creator><pubDate>Sat, 28 Dec 2013 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:ryanmo.co,2013-12-28:/2013/12/28/create-a-scratchpad-with-alfred</guid><category>Tech</category><category>alfred</category><category>automation</category></item><item><title>Writing Notes with Alfred 2</title><link>https://ryanmo.co/2013/05/14/notes_and_alfred</link><description>&lt;p&gt;I started coding about two years ago and only recently discovered the wonders of Markdown.  Every time I'd learn something new, I would keep it in a text file with TextEdit. This was good and fine until a coworker introduced me to Notational Velocity. This completely changed the way I managed my notes but I always felt like I was missing something. That's when I discovered NVAlt. It let me keep the simplicity of plain text but format the note with the wonders of Markdown. &lt;/p&gt;


&lt;p&gt;Now I was left with another problem. I was annoyed having to command-tab over to NVAlt, command-D to go to the search field and type just to find the note. With Alfred 2's new File Filter, I can now search specifically for my notes within Alfred. I now just launch Alfred, type 'note' and any keywords I want and am immediately taken to my note in NVAlt. &lt;/p&gt;
&lt;p&gt;&lt;img alt="alfred_note" src="https://ryanmo.co/2013/05/14/notes_and_alfred/alfred_note.png" /&gt;&lt;/p&gt;
&lt;p&gt;This last week I've spent a lot of time writing up plans and documents. I wouldn't put NVAlt in the category of great text editors and so I've been using MultiMarkdown Composer, but I'm still saving to the same notes folder. It seemed only obvious to add more functionality to my Alfred script. Now I can optionally hold down command or control to open my note in MultiMarkdown Composer or Byword respectively. &lt;/p&gt;
&lt;p&gt;&lt;img alt="open_in_mmc" src="https://ryanmo.co/2013/05/14/notes_and_alfred/open_in_mmc.png" /&gt;&lt;/p&gt;
&lt;p&gt;You can download the Alfred Extension here:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ryanmo.co/2013/05/14/notes_and_alfred/Notes.alfredworkflow"&gt;&lt;img alt="image" src="https://ryanmo.co/images/alfred_extension.jpg" /&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;Be sure to set your path to your notes folder in the File Filter under Search Scope. If you're using Notational Velocity, you can change which application is opened in the action script. &lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ryan M</dc:creator><pubDate>Tue, 14 May 2013 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:ryanmo.co,2013-05-14:/2013/05/14/notes_and_alfred</guid><category>Tech</category><category>alfred</category><category>automation</category></item><item><title>Browse Files on Dropbox.com with Alfred 2</title><link>https://ryanmo.co/2013/04/14/browse_on_dropbox</link><description>&lt;p&gt;On a rare occasion, I need to view files in my Dropbox folder on my computer on the website. The most common use case is I want to see the entire structure of a directory. I &lt;a href="https://www.dropbox.com/help/175/"&gt;selectively unsync&lt;/a&gt; a lot of large directories since my MacBook Air has limited hard drive space. I want to quickly go to the Dropbox website and view this particular folder without having to re-navigate to it's location.&lt;/p&gt;


&lt;p&gt;To use, navigate to any file/folder from within Alfred and trigger the Actions panel. I have a file filter set up to search specifically my Dropbox folder&lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="https://ryanmo.co/2013/04/14/browse_on_dropbox/db_filter.jpg" /&gt; &lt;/p&gt;
&lt;p&gt;and trigger Actions to browse on Dropbox&lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="https://ryanmo.co/2013/04/14/browse_on_dropbox/browse_action.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Remember, you’ll need the &lt;a href="http://www.alfredapp.com/"&gt;Alfred&lt;/a&gt; &lt;a href="http://www.alfredapp.com/powerpack/"&gt;Powerpack&lt;/a&gt; for these extensions to work. Click the following icon to download the Alfred script to your computer:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://dl.dropbox.com/s/lh85xmki4lgeawk/Browse%20on%20Dropbox.alfredworkflow"&gt;&lt;img alt="image" src="https://ryanmo.co/images/alfred_extension.jpg" /&gt;&lt;/a&gt;  &lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ryan M</dc:creator><pubDate>Sun, 14 Apr 2013 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:ryanmo.co,2013-04-14:/2013/04/14/browse_on_dropbox</guid><category>Tech</category><category>dropbox</category><category>alfred</category></item></channel></rss>