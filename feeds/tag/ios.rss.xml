<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>ryanmo.co - ios</title><link>https://ryanmo.co/</link><description></description><lastBuildDate>Wed, 30 Aug 2017 11:22:00 -0700</lastBuildDate><item><title>Create Multiple Tasks in Omnifocus on iOS</title><link>https://ryanmo.co/2017/08/30/create-multiple-tasks-in-omnifocus-on-ios</link><description>&lt;p&gt;Throughout the day I think of things that I need to do after work or this coming weekend. The best way for me to not forget these is to quickly get them into Omnifocus. I've been using Drafts on my iPhone and Alfred on my Mac to quickly create tasks with the appropriate deferral and due dates. This has worked really well except for when I want to add more than one task at a time. &lt;/p&gt;
&lt;p&gt;Not too long ago, Omnifocus added the ability to import tasks in Taskpaper format. The import initially seemed very basic and only allowed you to dump them into Omnifocus' Inbox for processing. Digging into the documentation shows that you can be more specific about what project you want those tasks to go into as well as context, defer and due dates.&lt;/p&gt;
&lt;p&gt;Up until now, if I wanted to create multiple tasks for tonight, I would have to add each one individually in Drafts and use my "Due Tonight" action, return to Drafts and repeat. Using the Taskpaper syntax import, I can now add multiple lines as tasks in Drafts and import. Each line would look something like this:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;- Take out the garbage @flagged(true) @context(Admin &amp;amp; Routines) @defer(6pm) @due(8pm)
- Finish blog post @flagged(true) @context(Admin &amp;amp; Routines) @defer(6pm) @due(8pm)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Since Drafts supports JavaScript, I can create a single script to support my tonight, weekend or today tasks.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;targetTask&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Todo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;defaultTaskString&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;@flagged(true) @context(Admin &amp;amp; Routines)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;dueDateStrings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;today&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;@defer(now) @due(5pm)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;tonight&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;@defer(6pm) @due(8pm)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;weekend&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;@defer(next saturday @ 10am) @due(next sunday @ 5pm)&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;generateOmnifocusUrl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}){&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;contentLines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[],&lt;/span&gt; &lt;span class="nx"&gt;target&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;targetTask&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dueTime&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;dueDateStrings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;today&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="nx"&gt;contentLines&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;line&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;theArray&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="nx"&gt;theArray&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sb"&gt;`- &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;line&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;dueTime&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;defaultTaskString&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;encodeURIComponent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;contentLines&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="sb"&gt;`omnifocus:///paste?target=/task/&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;&amp;amp;content=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;contentLines&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;draft&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nx"&gt;dueTime&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;dueDateStrings&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;draft&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getTag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;taskWhen&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;draft&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;defineTag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;OFTasks&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;generateOmnifocusUrl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The action will first prompt me asking whether these lines are for tonight, this weekend or today and will then create the TaskPaper lines and open Omnifocus.&lt;/p&gt;
&lt;p&gt;&lt;img alt="drafts-prompt" src="https://ryanmo.co/posts/Tech/2017-08-30/drafts-prompt.png" /&gt;&lt;/p&gt;
&lt;p&gt;You can download the action for Drafts &lt;a href="https://drafts4-actions.agiletortoise.com/a/2Ex"&gt;here&lt;/a&gt;.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ryan M</dc:creator><pubDate>Wed, 30 Aug 2017 11:22:00 -0700</pubDate><guid isPermaLink="false">tag:ryanmo.co,2017-08-30:/2017/08/30/create-multiple-tasks-in-omnifocus-on-ios</guid><category>Tech</category><category>applescript</category><category>automation</category><category>ios</category><category>javascript</category><category>omnifocus</category></item><item><title>Back up Your Contacts with Pythonista</title><link>https://ryanmo.co/2014/09/28/back-up-your-contacts-with-pythonista</link><description>&lt;p&gt;While it hasn't happened in a while, I have lost or had issues with contacts in iCloud. I haven't found a reliable way to automatically back up my contacts on my Mac, but Pythonista offers a simple way to back them up.&lt;/p&gt;


&lt;p&gt;Pythonista offers a great library which gives you access to your contacts on iOS. With a short script, I can back up my contacts to a folder in my Dropbox account. This will add a vCard file to my Dropbox account with the date the script was run.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: You'll need the Dropbox login script for this to work. Visit &lt;a href="https://gist.github.com/omz/4034526"&gt;this&lt;/a&gt; link to get it set up. I keep mine in a folder called "lib" in Pythonista.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;You can download my Contacts Back up script &lt;a href="https://gist.github.com/rjames86/79f857f427599f6e145c"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;contacts&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;console&lt;/span&gt;
&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;abspath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;lib&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;dropboxlogin&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;get_client&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;

&lt;span class="c1"&gt;# Update this path here for the backup&lt;/span&gt;
&lt;span class="c1"&gt;# location in your Dropbox account.&lt;/span&gt;
&lt;span class="n"&gt;BACKUP_PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/Backups/Contacts&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;TODAY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;today&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;dropbox_client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_client&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;VCARD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;person&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vcard&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;person&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;contacts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_all_people&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

&lt;span class="n"&gt;console&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;dropbox_client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;put_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BACKUP_PATH&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;/contacts &lt;/span&gt;&lt;span class="si"&gt;{}&lt;/span&gt;&lt;span class="s1"&gt;.vcf&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TODAY&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;VCARD&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Backup complete!&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you're like me, you're going to forget to do this on a regular basis. I hadn't yet found a reason to use the IFTTT Launch Center Pro triggers, but this turned about to be a great reason to use it. I have a trigger that goes off on the first of every month that will launch the back up script.&lt;/p&gt;
&lt;p&gt;If you want to get reminders to back up your contacts using IFTTT, you can use the recipe below.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ifttt.com/view_embed_recipe/206885-backup-contacts-with-lcp" target = "_blank" class="embed_recipe embed_recipe-l_24" id= "embed_recipe-206885"&gt;&lt;img src= 'https://ifttt.com/recipe_embed_img/206885' alt="IFTTT Recipe: Backup Contacts with LCP connects date-time to launch-center" width="370px" style="max-width:100%"/&gt;&lt;/a&gt;&lt;script async type="text/javascript" src= "//ifttt.com/assets/embed_recipe.js"&gt;&lt;/script&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ryan M</dc:creator><pubDate>Sun, 28 Sep 2014 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:ryanmo.co,2014-09-28:/2014/09/28/back-up-your-contacts-with-pythonista</guid><category>Tech</category><category>automation</category><category>Dropbox</category><category>ifttt</category><category>launchcenterpro</category><category>ios</category><category>pythonista</category></item><item><title>Quick Sharing with Launch Center Pro and Dropbox</title><link>https://ryanmo.co/2014/03/04/quick-sharing-with-launch-center-pro-and-dropbox</link><description>&lt;p&gt;I've been finding more and more reasons to use Launch Center Pro recently. With the fairly recent addition of Dropbox actions, I've been finding new ways to share links quickly. &lt;/p&gt;


&lt;p&gt;&lt;img alt="Launch Center Pro and Dropbox" src="https://ryanmo.co/2014/03/04/quick-sharing-with-launch-center-pro-and-dropbox/lcp_dropbox.png" /&gt;&lt;/p&gt;
&lt;p&gt;I take a lot of quick photos that I never plan to keep around. In most cases, it's just to send to someone quickly. iMessage is easy, but the images aren't compressed nearly enough and can take a while to upload. I've now started uploading the images to Dropbox and sharing the link. The upload speed is reduced since Launch Center Pro will take care of reducing the quality before uploading. The message sends almost instantly because there isn't an attachment. Here are a few of workflows I use with Dropbox:&lt;/p&gt;
&lt;h3 id="upload-last-photo-taken-and-get-the-link"&gt;Upload last photo taken and get the link&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;This is if I simply need a quick link to share anywhere. The image uploads at 50% quality. I have a folder called Temp/_Destrctable Folder where I keep all my throwaway images. I'm using the TextExpander snippet ..ttimestamp to name the files like 14-03-08-19.42.45.jpg&lt;/em&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;launchpro-dropbox://addlastphoto?path=/Temp/_Destructable Folder&amp;amp;name=&amp;lt;..ttimestamp&amp;gt;.jpg&amp;amp;quality=50&amp;amp;getlink=1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="upload-last-photo-and-put-the-link-in-an-in-app-message-body"&gt;Upload last photo and put the link in an in-app message body&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Quick sharing with iMessage. Settings are the same as above.&lt;/em&gt; &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;launch://x-callback-url/dropbox/addphoto?attach=photo&amp;amp;path=/Temp/_Destructable Folder&amp;amp;name=&amp;lt;..ttimestamp&amp;gt;.jpg&amp;amp;quality=50&amp;amp;getlink=1&amp;amp;x-success=launch%3A//messaging%3Fbody%3D%5Bclipboard%5D&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="upload-from-any-source-to-dropbox"&gt;Upload from any source to Dropbox&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;Nice if you haven't taken the photo yet&lt;/em&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;launch://dropbox/addphoto?attach=photo&amp;amp;path=&amp;amp;name=&amp;amp;quality=&amp;amp;getlink=1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ryan M</dc:creator><pubDate>Tue, 04 Mar 2014 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:ryanmo.co,2014-03-04:/2014/03/04/quick-sharing-with-launch-center-pro-and-dropbox</guid><category>Tech</category><category>ios</category><category>automation</category><category>Dropbox</category><category>launchcenterpro</category><category>photos</category></item><item><title>My Photo Workflow</title><link>https://ryanmo.co/2014/01/11/my-photo-workflow</link><description>&lt;p&gt;After listening to the Mac Power Users &lt;a href="http://www.macpowerusers.com/2014/01/05/mac-power-users-171-photo-management/"&gt;episode&lt;/a&gt; on photo management and reading the slew of follow up blog posts on other photo management workflows, I thought I would share mine as well.  While my workflow will be fairly similar to &lt;a href="http://www.macstories.net/tutorials/my-photo-management-workflow-early-2014/"&gt;Federico Viticci's&lt;/a&gt; with a few exceptions, I thought I would share the way that I take, organize, view and share my photos.&lt;/p&gt;


&lt;h2 id="taking-photos"&gt;Taking Photos&lt;/h2&gt;
&lt;p&gt;My iPhone is one of the main ways that I take photos. Since it's always in my pocket and takes great quality photos, it's by far the easiest way to take photos no matter where I am.  I've had a lot of fun with the iPhone 5S and the burst and slo-mo modes.&lt;/p&gt;
&lt;p&gt;I've never considered myself a photographer. For a long time, I had my mom's hand-me-down Olympus E-500. It was a great camera, but I had no idea how to use it and it was bigger than I preferred. Before moving to Ireland, I decided that I wanted to learn the basics of photography and have a camera that would grow with me as I learned more. The Olympus PEN E-P5 had just started pre-order and I decided that this would be my first "real" camera. I only had a few requirements, and it fortunately satisfied both of them: GPS tagging and small/lightweight. I've now had this the E-P5 for a little over 6 months and couldn't be happier. &lt;/p&gt;
&lt;p&gt;&lt;img alt="Olympus PEN E-P5" src="https://ryanmo.co/2014/01/11/my-photo-workflow/ep5.jpg" /&gt;&lt;/p&gt;
&lt;h2 id="importing"&gt;Importing&lt;/h2&gt;
&lt;p&gt;I only have one main way to upload my photos - Dropbox Camera Uploads. Whether I use the Dropbox app for iOS or the desktop application, my photos end up in the same place to get processed (more on that later in &lt;a href="#organization"&gt;Organization&lt;/a&gt;). &lt;/p&gt;
&lt;p&gt;Any photos that are taken on my iPhone are quickly uploaded via the Dropbox app. When I use my E-P5, I will first turn on the built-in Wifi to sync GPS data from my phone to the camera&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;. Once that is all taken care of, I plug the camera into my laptop and Dropbox grabs the new photos and imports them.&lt;/p&gt;
&lt;h2 id="organization"&gt;Organization&lt;/h2&gt;
&lt;p&gt;I'm still pretty new to Hazel, but dealing with my photos was the reason I decided to bite the bullet and buy it. My Dropbox Camera Uploads folder was nearing 900 photos and I hadn't taken the time to organize them in over a year. &lt;/p&gt;
&lt;p&gt;Before Camera Uploads, I was suffering through iPhoto. It always bothered me that my photos were obfuscated from view. I always found myself wasting time trying to find the original or using the export option. When Camera Uploads was released, I searched for a way to cleanly export my photos into a Year-Month-Event folder structure. I discovered &lt;a href="https://github.com/BMorearty/exportiphoto"&gt;this script&lt;/a&gt; that gave me more than what I wanted and solved my problem perfectly. For anyone who wants to use this, the command I used was&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# -x deconflict export directories of same name&lt;/span&gt;
&lt;span class="c1"&gt;# -d stop use date prefix in folder name&lt;/span&gt;
&lt;span class="c1"&gt;# -y add year directory to output&lt;/span&gt;
python exporti_photo.py -x -d -y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I've been using the Year-Month-Event structure for a few years now and have starting running into a slight annoyance. I find myself constantly flipping between months trying to remember when a certain event happened. I finally came to the conclusion that the month directory was pretty unnecessary. What I decided on was the folder structure Year-MM.YY Event Name. &lt;/p&gt;
&lt;p&gt;&lt;img alt="New Photo Structure" src="https://ryanmo.co/2014/01/11/my-photo-workflow/photo_list.png" /&gt;&lt;/p&gt;
&lt;p&gt;This gives me a much easier way to visualize my photos by event name rather than poking through folders by month.&lt;/p&gt;
&lt;p&gt;My Hazel workflow is fairly simple, but takes care of everything in one rule. I've set up a few exceptions for photo types that don't need to be sorted, such as screenshots or other PNG files. I also have rules set up for fun projects like my &lt;a href="/2014/01/05/organizing-special-photos-with-hazel"&gt;"photo a day"&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Hazel Rule" src="https://ryanmo.co/2014/01/11/my-photo-workflow/photos_hazel.png" /&gt;&lt;/p&gt;
&lt;p&gt;Finally once photos are sorted, I will manually go in and individually name all of the events that were created. This makes it much easier to search for events in the future. The next step in my process here is to tag photos. The one feature I do miss about iPhoto was the facial recognition. Since I haven't found a way to do facial recognition outside of Aperture or iPhoto, I will manually go in and tag photos with the names of those in the photos. This has been very useful when I want to find photos of people in certain contexts. For example,  the tags &lt;code&gt;me&lt;/code&gt;, &lt;code&gt;office&lt;/code&gt;, &lt;code&gt;dublin&lt;/code&gt; will give me photos of myself in the Dublin office, but not San Francisco.&lt;/p&gt;
&lt;h2 id="consumption-and-sharing"&gt;Consumption and Sharing&lt;/h2&gt;
&lt;p&gt;In Mac OS X, I have three ways that I view my photos. The first, and most basic is Finder.  The Cover Flow view in Finder is actually a great way to quickly go through photos and get the ones that you want. When I'm wanting to share my photos with others, I use the &lt;a href="https://www.dropbox.com/photos"&gt;Dropbox Photos&lt;/a&gt; page. As a quick way to share a select number of photos quickly, I've still found this to be the best way. For general viewing and pruning of photos I don't want, I've been using a not so well known app called &lt;a href="http://www.lynapp.com"&gt;Lyn&lt;/a&gt;. It has some nice features for sharing to multiple services, but what I really like about it is that it'll just watch a folder and display the photos in that folder. Lyn will also let me see all of the metadata about the photos, including a map if there is GPS information. Lastly, on the rare occasion that I want to edit my photo, I will import the photo into Aperture. For the same reasons I dislike iPhoto, I dislike Aperture. I will typically import the photo, edit it, and then export back into Dropbox.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Lyn.app" src="https://ryanmo.co/2014/01/11/my-photo-workflow/lyn.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;On iOS, I have two primary apps that I use to view my photos. The first, unsurprisingly, is the Dropbox app. For quick viewing and sharing, I will use Dropbox since that's where all of my photos live. As a Photos app replacement, I use &lt;a href="http://unboundapp.com"&gt;Unbound&lt;/a&gt;. What's great about Unbound is that it treats folders in your Dropbox account like albums. Since my photos are organized this way anyways, I get perfectly created albums that I can view and even cache to my phone for offline viewing.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Dropbox and Unbound" src="https://ryanmo.co/2014/01/11/my-photo-workflow/unbound_dropbox.jpg" /&gt;&lt;/p&gt;
&lt;h2 id="the-future"&gt;The Future&lt;/h2&gt;
&lt;p&gt;Dropbox has been doing a great job improving the photo experience. Photo organization is a very personal thing and trying to solve this for the majority is not an easy task. Many companies are trying to do this, and so far there has been no clear winner. As much as I love my folder organization, I would really like to get to a point where I don't even have to worry about where my photos are. The metadata of the photos should be enough for an application or website to organize the photos for me.&lt;/p&gt;
&lt;p&gt;I mentioned this earlier, but one other thing I would really like to see is a 3rd-party app that does facial recognition and applies tags or some other bit of metadata to the file. Tagging my photos with peoples' names is by far the most manual part of my photos workflow, but also one of the most important to me.&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;The GPS data is stored on the SD card, but I haven't taken the time to see if I can add this metadata after importing from Dropbox&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ryan M</dc:creator><pubDate>Sat, 11 Jan 2014 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:ryanmo.co,2014-01-11:/2014/01/11/my-photo-workflow</guid><category>Tech</category><category>hazel</category><category>automation</category><category>dropbox</category><category>ios</category><category>photos</category></item><item><title>Quick Conversions with Launch Center Pro and Soulver</title><link>https://ryanmo.co/2013/12/03/quick-conversions-with-launch-center-pro-and-soulver</link><description>&lt;p&gt;There are some great tools out there to convert things like currency, distances and measurements. Even Siri can do this fairly well, but the one thing I always find frustrating is that the process of doing this can be fairly slow and in a lot of cases requires a data connection. Growing up in the United States, I was unfortunately never exposed to the metric system or Celsius. Since I've moved to Dublin, I'm find myself doing a lot of conversions from one unit to another.&lt;/p&gt;


&lt;p&gt;I was poking around in &lt;a href="http://contrast.co/launch-center-pro/"&gt;Launch Center Pro&lt;/a&gt; for iOS the other day to just see what kinds of things I could do, and I noticed one of the options was &lt;a href="http://www.acqualia.com/soulver/iphone/"&gt;Soulver&lt;/a&gt;. My main use case for Soulver has always been one-off conversions or keeping score while playing Farkle with my girlfriend. It occurred to me that this would make a really nice way to do quick conversions. &lt;/p&gt;
&lt;p&gt;I didn't want to have to create a mess of different actions for each unit. The way around this was to create a variable within Soulver and always reference back to it with multiple conversions. I started out simple with a quick US Dollar to Euro and Pounds and vice-versa. &lt;/p&gt;
&lt;p&gt;&lt;img alt="Currency Conversion" src="https://ryanmo.co/2013/12/03/quick-conversions-with-launch-center-pro-and-soulver/lcp_currency.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;To achieve this, Launch Center Pro uses x-callback-urls which allows apps to send data to another app and perform actions. The following url requests a number and then sends over this number as a variable to Soulver&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;soulver://new?text=x%20%3D%20[prompt-num:Text]%0Ax%20euro%20to%20usd%0Ax%20gbp%20to%20usd%0A----------------%0Ax%20usd%20to%20euro%0Ax%20usd%20to%20gbp%0A----------------&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;title=Currency%20Conversion
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This worked perfectly and solved the two biggest requirements that I had: to be quick and to not rely on a data connection. I then wanted to go a little further and so I did some very basic unit conversions.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Unit Conversions" src="https://ryanmo.co/2013/12/03/quick-conversions-with-launch-center-pro-and-soulver/lcp_temp.jpg" /&gt;  &lt;/p&gt;
&lt;p&gt;The url for the action is very similar, but using different conversions&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;soulver://new?text=x%20%3D%20[prompt-num:Text]%0AFahrenheit%3A%20x%20C%20to%20F%0ACelsius%3A%20x%20F%20to%20C%0A-%20-%20-%20-%20-%20-%20-%20-%20-%20-%20-%20-%20%0AMiles%3A%20x%20km%20to%20mi%0AKilometers%3A%20x%20mi%20to%20km%0A-%20-%20-%20-%20-%20-%20-%20-%20-%20-%20-%20-%20%0AFeet%3A%20x%20m%20to%20feet%0AMeters%3A%20x%20feet%20to%20m%0A----------------&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;title=Temperature
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you have both Launch Center Pro and Soulver, you can download both of these actions here:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://launchcenterpro.com/2xv247"&gt;Currency Conversion&lt;/a&gt;&lt;br /&gt;
&lt;a href="http://launchcenterpro.com/ylljt1"&gt;Unit Conversions&lt;/a&gt;  &lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ryan M</dc:creator><pubDate>Tue, 03 Dec 2013 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:ryanmo.co,2013-12-03:/2013/12/03/quick-conversions-with-launch-center-pro-and-soulver</guid><category>Tech</category><category>ios</category><category>automation</category></item></channel></rss>